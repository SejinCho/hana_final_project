package kr.ac.artTechManager.controller;


import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import kr.ac.artTechManager.service.ArtworkService;
import kr.ac.artTechManager.service.ArtworkServiceImpl;
import kr.ac.artTechManager.service.WriterInfoService;
import kr.ac.artTechManager.vo.ArtworkInfoImg;
import kr.ac.artTechManager.vo.ArtworkInfoVO;
import kr.ac.artTechManager.vo.WriterInfoVO;
import lombok.RequiredArgsConstructor;

@Controller
@RequestMapping("/manage")
@RequiredArgsConstructor
public class ArtworkController {
	private final ArtworkService service;
	private final WriterInfoService writerSerivce;
	
	@GetMapping("/goodsRegister")
	public String addArtworkInfoGet(Model model) {
		List<WriterInfoVO> writerInfoList = writerSerivce.getWriterInfoList();
		model.addAttribute("writerInfoList", writerInfoList);
		return "manage/goodsRegister";
	}
	
	//작품등록
	@PostMapping("/goodsRegister")
	public String addArtworkInfoPost(ArtworkInfoVO artworkInfo, List<MultipartFile> multipartFile) throws IOException{
		
		String filePath = "C:/art-tech/artwork_img";
		List<ArtworkInfoImg> artworkInfoImgList = new ArrayList<ArtworkInfoImg>();
		
		//파일이 존재할 때
		if(multipartFile.size() > 0 && !multipartFile.get(0).getOriginalFilename().equals("")) {
			for(MultipartFile file : multipartFile) {
				ArtworkInfoImg artworkInfoImg = new ArtworkInfoImg();
				
				artworkInfoImg.setOrgnFileName(file.getOriginalFilename());
				artworkInfoImg.setFileChanName(UUID.randomUUID().toString().replace("-", "") + file.getOriginalFilename());
				artworkInfoImg.setFileSize(file.getSize());
				artworkInfoImg.setArtworkInfoId(artworkInfo.getId());
				artworkInfoImg.setFilePath(filePath);
				
				artworkInfoImgList.add(artworkInfoImg);
			
			}
		}
		
		System.out.println("컨트롤러 : " + artworkInfoImgList.toString());
		//service.addArtworkInfo(artworkInfo, artworkInfoImgList);
		
		return "redirect:/manage/goods"; 
	}
	
	
	//작품리스트
	@GetMapping("/goods")
	public String goodsList(Model model) {
		List<ArtworkInfoVO> artworkInfoList = service.getArtworkInfoList();
		model.addAttribute("artworkInfoList", artworkInfoList);
		return "manage/goods";
	}
}
